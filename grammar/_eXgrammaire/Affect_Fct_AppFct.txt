//affectation
AFFECTATION' ->  ID :=  EXPRESSION ;
              |  ID :   EXPRESSION ;
              |  ID =   EXPRESSION ;
              |  ID <-  EXPRESSION ;

AFFECTATION  ->  const AFFECTATION'
              |  AFFECTATION'

EXPRESSION   ->   TERM 
              | TERM OPERATEURADD TERM

TERM        ->    FACTEUR OPERATEURMULT FACTEUR
              | FACTEUR
              | FACTEUR OPERATEURSPECIAUX


FACTEUR      -> ID 
              | NUMBER 
              | ( EXPRESSION )

OPERATEURSPECIAUX ->  ++
                    | -- 
                    
OPERATEURADD      ->   + 
                    |  -

 OPERATEURMULT    ->   *
                    |  \
                    |  % 
                    |  mod
                    |  modulo 




// Appel fonctions
APPEL_FONCTIOn -> ID ( PARAMETERS ) ;

//Fonction declaration
FONCTION     ->  TYPE  FONCTION'
              |   function FONCTION'
FONCTION'    -> ID(PARAMETERS){ INSTS };

PARAMETERS    -> eps
              | PARAMETER 

PARAMETER     ->ID TYPE 
              | PARAMETER , ID TYPE
            



